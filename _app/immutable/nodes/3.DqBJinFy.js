import"../chunks/DsnmJJEf.js";import{o as M}from"../chunks/DAWDBSPO.js";import{p as $,k as E,I as R,f as k,aD as T,t as P,b as y,c as j,h as m,d as c,aF as B,s as b,r as a,aG as D}from"../chunks/IG-u7e72.js";import{s as I}from"../chunks/BClcBdzo.js";import{e as q,i as X}from"../chunks/Sk6jhTRv.js";import{s as g}from"../chunks/OQyBkhAV.js";import{b as Y}from"../chunks/BWjP7EIX.js";import{s as F,a as L}from"../chunks/B5axHNZS.js";import{w as W}from"../chunks/BrN9eOGY.js";class A{grid;resw;resh;cols;rows;solved=W(!1);color1;color2;outline;linecolor;constructor(){this.grid=[[0]],this.resw=50,this.resh=50,this.cols=10,this.rows=10,this.color1="black",this.color2="white",this.outline=!0,this.linecolor="#808080"}get cwidth(){return this.cols*this.resw}get cheight(){return this.rows*this.resh}createGrid(t,e,o,l,h){this.cols=t,this.rows=e,this.resw=o,this.resh=l;for(let i=0;i<this.cols;i++){let s=[];for(let r=0;r<this.rows;r++)h?s[r]=h[i][r]:s[r]=Math.floor(Math.random()*2);this.grid[i]=s}}drawGrid(t){t.fillStyle="rgba(0, 0, 0, 0)",t.fillRect(0,0,this.cwidth,this.cheight);for(let e=0;e<this.cols;e++)for(let o=0;o<this.rows;o++){let l=this.grid[e][o];t.fillStyle=this.determineColor2(l,"fill"),t.fillRect(e*this.resw,o*this.resh,this.resw,this.resh)}if(this.outline){t.strokeStyle=this.linecolor,t.lineWidth=1;for(let e=1;e<this.cols;e++)t.beginPath(),t.moveTo(e*this.resw-.5,0),t.lineTo(e*this.resw+.5,this.cheight),t.stroke();for(let e=1;e<this.rows;e++)t.beginPath(),t.moveTo(0,e*this.resw-.5),t.lineTo(this.cwidth,e*this.resw-.5),t.stroke()}}toggleColor2(t,e){this.grid[t][e]=this.grid[t][e]===0?1:0,this.solved.set(this.grid.flat().every(o=>o===1))}determineColor2(t,e){return e==="fill"?t===0?this.color1:this.color2:"red"}runPuzzle(){const t=document.getElementById("kansas"),e=t.getContext("2d");e.imageSmoothingEnabled=!1,t.addEventListener("click",o=>{const l=o.clientX-t.getBoundingClientRect().left,h=o.clientY-t.getBoundingClientRect().top;let i=Math.floor(l/this.resw),s=Math.floor(h/this.resh);if(!(i<0||s<0||i>=this.cols||s>=this.rows)){for(const r of H)i+r.x>=this.cols||i+r.x<0||s+r.y>=this.rows||s+r.y<0||this.toggleColor2(i+r.x,s+r.y);this.drawGrid(e)}}),this.drawGrid(e)}}const H=[{x:0,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:0},{x:-1,y:0}];var J=k(`<style>#kansas {
            transition: opacity 1s ease-in;
            image-rendering: pixelated;
        }</style>`),K=k('<div class="w-fit text-center items-center flex flex-col"><a><img class="cool-image h-[128px]"/> <p class="font-[Deltarune] text-shadow-black text-shadow-md shrink max-w-[128px]"> </p></a></div>'),N=k(`<div class="pl-5 pr-3 pt-3 relative bg-linear-to-b from-green-600 to-[100vh] to-green-950 min-h-[100vh]"><h1 class="text-6xl">games</h1> <p>Games I've made.</p> <div class="mt-6"><div style="image-rendering: pixelated;" class="p-8 flex flex-row gap-8"></div></div> <div class="h-fit w-fit absolute right-[100px] bottom-[300px]"><canvas id="kansas" class="z-20 absolute w-fit"></canvas> <div style="image-rendering: pixelated;" class="z-10 translate-x-[65%] translate-y-[10%] w-fit flex flex-col text-center items-center"><a href="/games/switchpuzzle"><img src="games/laswitch.png" alt="Switch Puzzle" class="cool-image h-[64px]"/> <p class="font-[Deltarune] text-shadow-black text-shadow-md shrink max-w-[64px]">Switch Puzzle</p></a></div></div></div>`);function rt(z,t){$(t,!0);const[e,o]=L(),l=()=>F(m(r),"$swchpzlsolved",e),h=[{text:"Ruby Mine",image:"games/ruby-mine-icon.png",link:"https://ruby.quantumkya.dev"},{text:"Euclidia",image:"games/euclidia.png",link:"https://quantumkya.itch.io/euclidia"}];let i;const s=E(new A),r=B(()=>s.solved);M(()=>{s.createGrid(3,3,50,50,[[0,1,0],[1,0,1],[0,1,0]]),s.outline=!0,s.runPuzzle()}),R(()=>{l()&&(i.style.pointerEvents="none",i.style.opacity="0")});var f=N();T(d=>{var n=J();y(d,n)});var p=b(c(f),4),_=c(p);q(_,21,()=>h,X,(d,n)=>{var v=K(),u=c(v),x=c(u),G=b(x,2),S=c(G,!0);a(G),a(u),a(v),P(()=>{g(u,"href",m(n).link),g(x,"src",m(n).image),g(x,"alt",m(n).text),I(S,m(n).text)}),y(d,v)}),a(_),a(p);var C=b(p,2),w=c(C);Y(w,d=>i=d,()=>i),D(2),a(C),a(f),P(()=>{g(w,"width",s.cwidth),g(w,"height",s.cheight)}),y(z,f),j(),o()}export{rt as component};
